<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mappers.sgh-movie-time-mapper">

	<!-- 종료시간이 지나지 않고 삭제되지 않은 movie_time 리스트 가져오기 -->
	<select id="getMovieTimeList" resultType="SghMovieTimeListVo">
		select * from (select rownum rnum, a.* from (select t.movie_time_code, t.movie_start_time, t.movie_end_time, d.movie_code,
		m.movie_name, s.screen_name, tt.theater_name, t.movie_money, t.movie_time_state, t.movie_time_del_date
		from tbl_movie_time t, tbl_movie_schedule d, tbl_movie m, tbl_movie_screen s, tbl_theater tt
		where t.movie_schedule_code = d.movie_schedule_code and d.movie_code = m.movie_code and t.screen_code = s.screen_code
		and s.theater_code = tt.theater_code and t.movie_time_state = 'Y' and movie_end_time >= systimestamp
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
		order by movie_end_time desc) a)
		where rnum between #{start_row} and #{end_row}
	</select>
	
	<!-- 시간이 지나지 않은 것 중 삭제되지 않은 총합 수 가져오기 -->
	<select id="getMovieTimeCount" resultType="integer">
		select count(*) from tbl_movie_time mt, tbl_theater tt, tbl_movie_schedule tms, tbl_movie m
		where mt.movie_time_state = 'Y' and movie_end_time >= sysdate
        and mt.movie_schedule_code = tms.movie_schedule_code
        and tms.movie_code = m.movie_code
        and tms.theater_code = tt.theater_code
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 삭제된 movie_time 리스트 가져오기 -->
	<select id="deleteMovieTimeList" resultType="SghMovieTimeListVo">
		select * from (select rownum rnum, a.* from (select t.movie_time_code, t.movie_start_time, t.movie_end_time, d.movie_code,
		m.movie_name, s.screen_name, tt.theater_name, t.movie_money, t.movie_time_state, t.movie_time_del_date
		from tbl_movie_time t, tbl_movie_schedule d, tbl_movie m, tbl_movie_screen s, tbl_theater tt
		where t.movie_schedule_code = d.movie_schedule_code and d.movie_code = m.movie_code and t.screen_code = s.screen_code
		and s.theater_code = tt.theater_code and t.movie_time_state = 'N'
		
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
		
		order by movie_end_time desc) a)
		where rnum between #{start_row} and #{end_row}
	</select>
	
	<!-- 시간이 지나지 않은 것 중 삭제된 총합 수 가져오기 -->
	<select id="deleteMovieTimeCount" resultType="integer">
        select count(*) from tbl_movie_time mt, tbl_theater tt, tbl_movie_schedule tms, tbl_movie m
		where mt.movie_time_state = 'N'
        and mt.movie_schedule_code = tms.movie_schedule_code
        and tms.movie_code = m.movie_code
        and tms.theater_code = tt.theater_code
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 종료시간이 지나고 삭제되지 않은 movie_time 리스트 가져오기 -->
	<select id="endOutMovieTimeList" resultType="SghMovieTimeListVo">
		select * from (select rownum rnum, a.* from (select t.movie_time_code, t.movie_start_time, t.movie_end_time, d.movie_code,
		m.movie_name, s.screen_name, tt.theater_name, t.movie_money, t.movie_time_state, t.movie_time_del_date
		from tbl_movie_time t, tbl_movie_schedule d, tbl_movie m, tbl_movie_screen s, tbl_theater tt
		where t.movie_schedule_code = d.movie_schedule_code and d.movie_code = m.movie_code and t.screen_code = s.screen_code
		and s.theater_code = tt.theater_code and t.movie_time_state = 'Y' and movie_end_time <![CDATA[ <= ]]> systimestamp
		
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
		
		order by movie_end_time desc) a)
		where rnum between #{start_row} and #{end_row}
	</select>
	
	<!-- 시간이 지난 것 중 삭제되지 않은 총합 수 가져오기 -->
	<select id="endOutMovieTimeCount" resultType="integer">
	 	select count(*) from tbl_movie_time mt, tbl_theater tt, tbl_movie_schedule tms, tbl_movie m
		where mt.movie_time_state = 'Y' and movie_end_time <![CDATA[ <= ]]> sysdate
        and mt.movie_schedule_code = tms.movie_schedule_code
        and tms.movie_code = m.movie_code
        and tms.theater_code = tt.theater_code
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 삭제하기 -->
	<update id="deleteMovieTime">
		update tbl_movie_time set
			movie_time_state = 'N',
			movie_time_del_date = sysdate
		where movie_time_code = #{movie_time_code}
	</update>
	
	<!-- 복구하기 -->
	<update id="restoreMovieTime">
		update tbl_movie_time set
			movie_time_state = 'Y'
		where movie_time_code = #{movie_time_code}
	</update>
	
	<!-- 등록할때 필요한 영화 명단 -->
	<select id="getMovieList" resultType="SghScheduleVo">
		select s.movie_schedule_code, s.movie_code, s.theater_code, m.movie_name, s.movie_start_date, s.movie_end_date, t.theater_name, s.movie_schedule_state, s.movie_del_date
		from tbl_movie_schedule s, tbl_movie m, tbl_theater t
		where s.movie_code = m.movie_code and s.theater_code = t.theater_code and s.movie_schedule_state = 'Y'
		and s.movie_end_date >= sysdate
	</select>
	
	<!-- 에이잭스 요청, 상영 일정에 등록된 영화 정보 -->
	<select id="getAjaxScheduleOne" resultType="SghMovieTimeAjaxDto">
		select m.movie_name, m.movie_code, tt.theater_name, d.theater_code, d.movie_start_date, d.movie_end_date, d.movie_schedule_code
		from tbl_movie_schedule d, tbl_theater tt, tbl_movie m
		where d.theater_code = tt.theater_code and m.movie_code = d.movie_code
			  and d.movie_schedule_code = #{movie_schedule_code} and d.movie_schedule_state = 'Y'
	</select>
	
	<!-- 에이잭스 요청, 상영 일정에서 고른 상영관에 대한 스크린 정보 -->
	<select id="getAjaxScreenList" resultType="SghMovieScreenAjaxDto">
		select * from tbl_movie_screen
		where theater_code = #{theater_code} and screen_state = 'Y'
	</select>
	
	<!-- 상영 회차 등록하기 -->
	<insert id="insertMovieTime">
		insert into tbl_movie_time(movie_time_code, screen_code, movie_schedule_code, movie_start_time, movie_end_time, movie_money)
		values('MTC' || seq_movie_time_num.nextval, #{screen_code}, #{movie_schedule_code}, #{movie_start_time}, #{movie_end_time}, #{movie_money})
	</insert>
	
	<!-- 상영 회차 하나 정보 가져오기 -->
	<select id="selectMovieTimeOne" resultType="SghMovieTimeModifyVo">
		select d.movie_schedule_code, m.movie_code, m.movie_name, tt.theater_code, tt.theater_name, d.movie_start_date, d.movie_end_date, t.screen_code, t.movie_time_code, t.movie_start_time, t.movie_end_time, s.screen_total_seat, s.screen_seat_row, s.screen_seat_col, t.movie_money
		from tbl_movie_schedule d, tbl_theater tt, tbl_movie m, tbl_movie_time t, tbl_movie_screen s
		where d.theater_code = tt.theater_code and m.movie_code = d.movie_code and d.movie_schedule_code = t.movie_schedule_code and t.screen_code = s.screen_code
		and t.movie_time_code= #{movie_time_code}
	</select>
	
	<!-- 상영 회차 수정하기 -->
	<update id="modifyMovieTime">
		update tbl_movie_time set
		    screen_code = #{screen_code},
		    movie_start_time = #{movie_start_time},
		    movie_end_time = #{movie_end_time},
		    movie_money = #{movie_money}
		where movie_time_code = #{movie_time_code}
	</update>
	
	<!-- 좌석 일정 테이블에 넣을 좌석 코드 가져오기 -->
	<select id="getSeatCode" resultType="string">
		select movie_seat_num from tbl_movie_seat
		where screen_code = #{screen_code}
	</select>
	
	<!-- 좌석 일정 테이블에 입력하기 -->
	<insert id="insertScheduleSeat">
		insert into tbl_schedule_seat(schedule_seat_code, movie_seat_num, movie_time_code)
		values(seq_schedule_seat.nextval, #{movie_seat_num}, #{movie_time_code})
	</insert>
	
	<!-- 가장 최신 movie_time 코드 가져오기 -->
	<select id="getMovieTimeNewDate" resultType="string">
		select movie_time_code from (select rownum rnum, movie_time_code from (select movie_time_code from tbl_movie_time
                                                        order by regexp_replace(movie_time_code, '[0-9]') , 
                                                        to_number(regexp_replace(movie_time_code, '[^0-9]')) desc))
		where rnum = 1
	</select>
</mapper>