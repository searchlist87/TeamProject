<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mappers.sgh-schedule-mapper">
	<!-- end date가 지나지 않은 상영작으로 등록된 영화 가져오기 -->
	<select id="getScheduleList" resultType="SghScheduleVo">
		select * from (select rownum rnum, a.* from (select s.movie_schedule_code, s.movie_code, s.theater_code, m.movie_name, s.movie_start_date, s.movie_end_date, t.theater_name, s.movie_schedule_state, s.movie_del_date
		from tbl_movie_schedule s, tbl_movie m, tbl_theater t
		where s.movie_code = m.movie_code and s.theater_code = t.theater_code and s.movie_schedule_state = 'Y'
		and s.movie_end_date >= sysdate
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
        ) a)
        where rnum between #{start_row} and #{end_row}
        order by rnum desc
	</select>
	
	<!-- 삭제된 상영작 가져오기 -->
	<select id="deleteScheduleList" resultType="SghScheduleVo">
		select * from (select rownum rnum, a.* from (select s.movie_schedule_code, s.movie_code, s.theater_code, m.movie_name, s.movie_start_date, s.movie_end_date, t.theater_name, s.movie_schedule_state, s.movie_del_date
		from tbl_movie_schedule s, tbl_movie m, tbl_theater t
		where s.movie_code = m.movie_code and s.theater_code = t.theater_code and s.movie_schedule_state = 'N'
       	<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
        ) a)
        where rownum between #{start_row} and #{end_row}
        order by rnum desc
	</select>
	
	<!-- end date가 지난 상영작으로 등록된 영화 가져오기 -->
	<select id="endDateOutScheduleList" resultType="SghScheduleVo">
		select * from (select rownum rnum, a.* from (select s.movie_schedule_code, s.movie_code, s.theater_code, m.movie_name, s.movie_start_date, s.movie_end_date, t.theater_name, s.movie_schedule_state, s.movie_del_date
		from tbl_movie_schedule s, tbl_movie m, tbl_theater t
		where s.movie_code = m.movie_code and s.theater_code = t.theater_code and s.movie_schedule_state = 'Y'
       	<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
        ) a)
        where rownum between #{start_row} and #{end_row}
        and movie_end_date <![CDATA[ <= ]]> sysdate
        order by rnum desc
	</select>
	
	<!-- 상영작 총 숫자 가져오기 -->
	<select id="getMovieScheduleCount" resultType="integer">
        select count(*)
        from tbl_movie_schedule tms, tbl_movie m, tbl_theater tt
        where tms.movie_schedule_state = 'Y'
        and tms.movie_code = m.movie_code
        and tms.theater_code = tt.theater_code
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 삭제된 상영작 총 숫자 가져오기 -->
	<select id="getDeleteScheduleCount" resultType="integer">
        select count(*)
        from tbl_movie_schedule tms, tbl_movie m, tbl_theater tt
        where tms.movie_schedule_state = 'N'
        and tms.movie_code = m.movie_code
        and tms.theater_code = tt.theater_code
		<if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 삭제되지 않은 종료 기간이 지난 상영작 총 숫자 가져오기 -->
	<select id="getEndOutScheduleCount" resultType="integer">
        select count(*)
        from tbl_movie_schedule tms, tbl_movie m, tbl_theater tt
        where tms.movie_schedule_state = 'Y'
        and tms.movie_code = m.movie_code
        and tms.theater_code = tt.theater_code
        and tms.movie_end_date <![CDATA[ <= ]]> sysdate
        <if test='keyword != ""'>
			<choose>
				<when test='category == "movie_name"'>
					and m.movie_name like '%' || #{keyword} || '%'
				</when>
				<when test='category == "theater_name"'>
					and tt.theater_name like '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 삭제하기 -->
	<update id="stateDeleteSchedule">
		update tbl_movie_schedule set
			movie_schedule_state = 'N',
			movie_del_date = sysdate
		where movie_schedule_code = #{movie_schedule_code}
	</update>
	
	<!-- 복구하기 -->
	<update id="stateRestoreSchedule">
		update tbl_movie_schedule set
			movie_schedule_state = 'Y'
		where movie_schedule_code = #{movie_schedule_code}
	</update>
	
	<!-- 등록된 영화 이름 가져오기 -->
	<select id="getMovieName" resultType="SghMovieNameVo">
		select distinct movie.movie_name, movie.movie_code
		from tbl_movie_schedule schedule, tbl_movie movie 
		where schedule.theater_code = #{theater_code} and schedule.movie_code = movie.movie_code
	</select>
	
	<!-- 상영작으로 등록하기 -->
	<insert id="insertMovieSchedule">
		insert into tbl_movie_schedule(movie_schedule_code, movie_code, theater_code, movie_start_date, movie_end_date, movie_schedule_num)
		values('SC' || seq_movie_schedule_num.nextval, #{movie_code}, #{theater_code}, #{movie_start_date}, #{movie_end_date}, seq_movie_schedule_num.nextval)
	</insert>
	
	<!-- 등록된 영화 하나 가져오기 -->
	<select id="getMovieScheduleOne" resultType="SghScheduleVo">
		select movie_schedule_code, movie_code, theater_code, movie_start_date, movie_end_date, movie_schedule_num
		from tbl_movie_schedule where movie_schedule_code = #{movie_schedule_code}
	</select>
	
	<!-- 등록된 영화 수정 -->
	<update id="updateSchedule">
		update tbl_movie_schedule set
		    movie_code = #{movie_code},
		    theater_code = #{theater_code},
		    movie_start_date = #{movie_start_date},
		    movie_end_date = #{movie_end_date}
		where movie_schedule_code = #{movie_schedule_code}
	</update>
</mapper>